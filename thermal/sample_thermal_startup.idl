
;
; Create a blank template and populate with site values
; Save the results for intermediate processing
;

sp=return_blank_thermal_model_structure()

sp.body_name = 'MARS'                      ; Location and geometry of surface
;sp.body_name = 'CUSTOM'                      
;sp.orbit = [1.52366231d0,0.077137229925132d0,230.0199107839d0,44.475543091667d0,88775.2d0]

sp.latitude  = 45.0
sp.longitude = 0.0
sp.slope     = 0.0
sp.aspect    = 0.0
sp.elevation = -3000.0

sp.flat_flux_file    = ''                   ; Radiation from surrounding flat terrain
sp.flat_calculate    = ''                   ; Calculate flat-terrain behavior for a later sloping terrain run

sp.albedo            = 0.25                ; Boundary properties
sp.emissivity        = 1.0d0
sp.heat_flux         = 0.03

sp.layer_top(0)      = 0.0                 ; Thermophysical properties of the surface layers
sp.layer_inertia(0)  = 190.0
sp.layer_density(0)  = 1980.0
sp.layer_capacity(0) = 837.0

sp.layer_top(1)      = 0.25                 ; Thermophysical properties of the surface layers
sp.layer_inertia(1)  = 2050.887531452338
sp.layer_density(1)  = 927.0
sp.layer_capacity(1) = 1448.0960

sp.daily_layers      = 15.00d0             ; Parameters to describe subsurface layers. Number of layers in
sp.annual_layers     =  6.00d0             ; the diurnal skin depth. Number of annual skin depths in model
sp.layer_growth      =  1.03d0             ; domain and geometric factor by which layer thickness increases.

sp.dt                = 500.d0               ; Force choice of timestep (leave at zero to default to Courant criterion)
sp.start_time        = 0d0                 ; Start time of model
sp.run_cycles        = 15.d0               ; Number of cycles to run model for before exporting results
sp.reset_cycle       = 5.d0                ; Cycle number after which all sub-surface temperatures are reset to the surface annual mean
sp.initial_temperature  = 200.d0           ; Initial guess at surface temperature
sp.numeric_scheme    = 0.5d0               ; Numerical scheme to use: 0.0 Fully Implicit, 0.5 Crank-Nicolson, 1.0 Fully Explicit or anything inbetween

sp.atm_ir            = 0.04                ; Atmospheric properties including frost
sp.atm_vis           = 0.02
sp.frost_switch      = 1.0
sp.frost_albedo      = 0.65
sp.frost_emissivity  = 0.9

sp.run_number = 'ali_icetable'

;
; Run and time it
;

save,sp,filename = sp.run_number + '_parameters.sav'

print,thermal_model_v07(preprocess_thermal_model(sp))


restore,sp.run_number + '_results.sav'
plot,ls,itt(*,0),ps=3,xr=[250,252]
oplot,[ls(0),ls(0)],[0,300]

end


